(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>d});var r=t(354),a=t.n(r),o=t(314),i=t.n(o)()(a());i.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-coffee: #714826;\n  --milk-coffee: #d09164;\n}\n\nbody {\n  background-color: #f6edd9;\n  height: 100vh;\n  height: 100dvh;\n}\n\nbutton {\n  border-radius: 25px;\n  text-align: inherit;\n  background: none;\n  box-shadow: none;\n  padding: 0;\n  cursor: pointer;\n  border: none;\n}\n\nbutton:focus {\n  border: white;\n}\n\ndiv.container {\n  height: 90%;\n  width: 100%;\n  padding: 3rem 7rem;\n  display: grid;\n  grid-template-rows: repeat(7, 1fr);\n}\n\ndiv.image-holder {\n  grid-area: 1 / 1 / span 6 / span 3;\n  overflow: hidden;\n  z-index: -1;\n}\n\ndiv.image-holder > img {\n  display: none; /* default state */\n}\n\ndiv.image-holder > img.is-displayed {\n  display: block;\n  object-fit: cover;\n  object-position: 50% 45%;\n  width: 100%;\n  height: 100%;\n}\n\ndiv.navigator-wrapper {\n  grid-row: 3 / span 2;\n  grid-column: 1 / span 3;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1rem;\n}\n\ndiv.navigator-wrapper button svg {\n  fill: white;\n  opacity: 0.9;\n}\n\ndiv.indicator-wrapper {\n  grid-row: 7 / span 1;\n  grid-column: 1 / span 3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\ndiv.indicator-wrapper button {\n  width: 1.75rem;\n  height: 1.75rem;\n}\n\ndiv.indicator-wrapper button#play-pause svg {\n  fill: var(--milk-coffee);\n  width: 1.75rem;\n  height: 1.75rem;\n}\n\ndiv.indicator-wrapper button#play-pause svg:active,\ndiv.indicator-wrapper button#play-pause svg.is-paused {\n  fill: var(--dark-coffee);\n}\n\ndiv.indicator-wrapper button:not(#play-pause) {\n  border: 2px solid var(--dark-coffee);\n  border-radius: 25px;\n  opacity: 0.7;\n}\n\ndiv.indicator-wrapper button:not(#play-pause).is-active {\n  background-color: var(--dark-coffee);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;EACtB,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,mBAAmB;EACnB,mBAAmB;EACnB,gBAAgB;EAChB,gBAAgB;EAChB,UAAU;EACV,eAAe;EACf,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,kCAAkC;AACpC;;AAEA;EACE,kCAAkC;EAClC,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,aAAa,EAAE,kBAAkB;AACnC;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,wBAAwB;EACxB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,oBAAoB;EACpB,uBAAuB;EACvB,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,oBAAoB;EACpB,uBAAuB;EACvB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,wBAAwB;EACxB,cAAc;EACd,eAAe;AACjB;;AAEA;;EAEE,wBAAwB;AAC1B;;AAEA;EACE,oCAAoC;EACpC,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,oCAAoC;AACtC",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-coffee: #714826;\n  --milk-coffee: #d09164;\n}\n\nbody {\n  background-color: #f6edd9;\n  height: 100vh;\n  height: 100dvh;\n}\n\nbutton {\n  border-radius: 25px;\n  text-align: inherit;\n  background: none;\n  box-shadow: none;\n  padding: 0;\n  cursor: pointer;\n  border: none;\n}\n\nbutton:focus {\n  border: white;\n}\n\ndiv.container {\n  height: 90%;\n  width: 100%;\n  padding: 3rem 7rem;\n  display: grid;\n  grid-template-rows: repeat(7, 1fr);\n}\n\ndiv.image-holder {\n  grid-area: 1 / 1 / span 6 / span 3;\n  overflow: hidden;\n  z-index: -1;\n}\n\ndiv.image-holder > img {\n  display: none; /* default state */\n}\n\ndiv.image-holder > img.is-displayed {\n  display: block;\n  object-fit: cover;\n  object-position: 50% 45%;\n  width: 100%;\n  height: 100%;\n}\n\ndiv.navigator-wrapper {\n  grid-row: 3 / span 2;\n  grid-column: 1 / span 3;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1rem;\n}\n\ndiv.navigator-wrapper button svg {\n  fill: white;\n  opacity: 0.9;\n}\n\ndiv.indicator-wrapper {\n  grid-row: 7 / span 1;\n  grid-column: 1 / span 3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\ndiv.indicator-wrapper button {\n  width: 1.75rem;\n  height: 1.75rem;\n}\n\ndiv.indicator-wrapper button#play-pause svg {\n  fill: var(--milk-coffee);\n  width: 1.75rem;\n  height: 1.75rem;\n}\n\ndiv.indicator-wrapper button#play-pause svg:active,\ndiv.indicator-wrapper button#play-pause svg.is-paused {\n  fill: var(--dark-coffee);\n}\n\ndiv.indicator-wrapper button:not(#play-pause) {\n  border: 2px solid var(--dark-coffee);\n  border-radius: 25px;\n  opacity: 0.7;\n}\n\ndiv.indicator-wrapper button:not(#play-pause).is-active {\n  background-color: var(--dark-coffee);\n}\n"],sourceRoot:""}]);const d=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);r&&i[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],d=0;d<n.length;d++){var c=n[d],A=r.base?c[0]+r.base:c[0],s=o[A]||0,p="".concat(A," ").concat(s);o[A]=s+1;var u=t(p),l={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(l);else{var f=a(l,r);r.byIndex=d,e.splice(d,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var d=t(o[i]);e[d].references--}for(var c=r(n,a),A=0;A<o.length;A++){var s=t(o[A]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}o=c}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{const n=document.querySelectorAll("div.image-holder > img"),e=document.querySelectorAll("button[data-index]");let r,a=0;function o(){a=0}function i(){if(!(a<n.length-1))return console.warn(`currentIndex can't exceed array.length, reset to 0.currentIndex: ${a}, array.length: ${n.length}`),void o();a+=1}function d(){n[a].classList.add("is-displayed")}function c(){n[a].classList.remove("is-displayed")}function A(){e.forEach((n=>{n.dataset.index===a.toString()?n.classList.add("is-active"):n.classList.remove("is-active")}))}function s(){r||(r=setInterval((()=>(c(),i(),A(),void d())),5e3))}function p(){r&&(clearInterval(r),r=null)}function u(e){e.preventDefault();const t=this.id;switch(p(),c(),t){case"back":a>0?a-=1:console.warn(`currentIndex can't be less than array.length, exited.currentIndex: ${a}, array.length: ${n.length}`);break;case"next":i();break;default:return void console.warn(`No Id found: ${t}`)}A(),d(),s()}var l=t(72),f=t.n(l),v=t(825),g=t.n(v),m=t(659),E=t.n(m),h=t(56),C=t.n(h),b=t(540),y=t.n(b),B=t(113),w=t.n(B),x=t(208),k={};k.styleTagTransform=w(),k.setAttributes=C(),k.insert=E().bind(null,"head"),k.domAPI=g(),k.insertStyleElement=y(),f()(x.A,k),x.A&&x.A.locals&&x.A.locals;const j=document.getElementById("back"),I=document.getElementById("next"),S=document.querySelector(".indicator-wrapper");document.addEventListener("DOMContentLoaded",(function(){o(),A(),d(),s()})),j.addEventListener("click",u),I.addEventListener("click",u),S.addEventListener("click",(n=>{"BUTTON"===n.target.tagName&&"play-pause"!==n.target.id&&function(n){n.preventDefault(),c(),a=function(n){const e=n.target.dataset.index;return parseInt(e)}(n),A(),d(),s()}(n),n.target.closest("#play-pause")&&function(n){n.preventDefault();const e=document.querySelector("#play-pause svg");r?(p(),e.classList.add("is-paused")):(s(),e.classList.remove("is-paused"))}(n)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,